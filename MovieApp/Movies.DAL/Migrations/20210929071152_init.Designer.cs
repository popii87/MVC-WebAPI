// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Movies.DAL.Context;

namespace Movies.DAL.Migrations
{
    [DbContext(typeof(MovieDbContext))]
    [Migration("20210929071152_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Movies.DAL.Models.Data.Movie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Genre")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Movies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "dasda",
                            Genre = 0,
                            Title = "Rambo",
                            UserId = 1,
                            Year = 1996
                        },
                        new
                        {
                            Id = 2,
                            Description = "Group of heroes save the world from evil",
                            Genre = 5,
                            Title = " The Lord Of The Rings",
                            UserId = 1,
                            Year = 2000
                        },
                        new
                        {
                            Id = 3,
                            Description = "Superheroes against the evil",
                            Genre = 1,
                            Title = " Avengers",
                            UserId = 1,
                            Year = 2002
                        },
                        new
                        {
                            Id = 4,
                            Description = "Superheroes against the evil",
                            Genre = 1,
                            Title = " Avengers2",
                            UserId = 1,
                            Year = 2002
                        },
                        new
                        {
                            Id = 5,
                            Description = "Superheroes against the evil",
                            Genre = 3,
                            Title = "Vratice se rode",
                            UserId = 1,
                            Year = 2000
                        },
                        new
                        {
                            Id = 6,
                            Description = "Superheroes against the evil",
                            Genre = 4,
                            Title = "Interstellar",
                            UserId = 1,
                            Year = 2010
                        },
                        new
                        {
                            Id = 7,
                            Description = "Superheroes against the evil",
                            Genre = 2,
                            Title = "Money Heist",
                            UserId = 1,
                            Year = 2010
                        });
                });

            modelBuilder.Entity("Movies.DAL.Models.Data.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("FavoriteGenre")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FavoriteGenre = 5,
                            FirstName = "Robert",
                            LastName = "Dimov",
                            Password = "123",
                            Username = "rdimov"
                        },
                        new
                        {
                            Id = 2,
                            FavoriteGenre = 0,
                            FirstName = "Viktor",
                            LastName = "Jakovlev",
                            Password = "456",
                            Username = "vjakovlev"
                        },
                        new
                        {
                            Id = 3,
                            FavoriteGenre = 1,
                            FirstName = "Bob",
                            LastName = "Bobski",
                            Password = "789",
                            Username = "bboski"
                        },
                        new
                        {
                            Id = 4,
                            FavoriteGenre = 3,
                            FirstName = "Ben",
                            LastName = "Solski",
                            Password = "889",
                            Username = "bencb"
                        });
                });

            modelBuilder.Entity("Movies.DAL.Models.Data.Movie", b =>
                {
                    b.HasOne("Movies.DAL.Models.Data.User", "User")
                        .WithMany("Movies")
                        .HasForeignKey("UserId")
                        .HasConstraintName("MyFKConstraint")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Movies.DAL.Models.Data.User", b =>
                {
                    b.Navigation("Movies");
                });
#pragma warning restore 612, 618
        }
    }
}
